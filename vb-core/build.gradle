plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

dependencies {
    shadow files("lib/client.jar")
    shadow files("lib/agent.jar")
    implementation "com.google.guava:guava:30.1-jre"
    implementation "com.google.inject:guice:5.0.0-BETA-1"
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "ch.qos.logback:logback-core:1.2.3"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation project(":vb-cjci-model")
    implementation project(":vb-core-contracts")
}

def MAIN_CLASS = "rscvanilla.bot.Main"
def JVM_ARG_AGENT_JAR = "-javaagent:./lib/agent.jar"
def JVM_ARG_LOG_FILE = "-Dlogback.configurationFile=./config/logback.xml"

compileJava.dependsOn(":vb-core-instrumentation:copyToLib")

task runBot(type: JavaExec) {
    main = MAIN_CLASS
    classpath = sourceSets.main.runtimeClasspath + files { file("/lib/client.jar") }
    jvmArgs = [JVM_ARG_AGENT_JAR, JVM_ARG_LOG_FILE]
}

task reloadScripts() {
    dependsOn classes.doLast {
        delete fileTree("${projectDir}/scripts")
        copy {
            from "${projectDir}/src/main/java/scripts"
            into "${projectDir}/scripts"
        }
        copy {
            from "${buildDir}/classes/java/main/scripts"
            into "${projectDir}/scripts"
        }
    }
}

def JAR_NAME = "bot"

def BUILD_DIR_PATH = project.buildDir
def BUILD_DIST_DIR_PATH = "${BUILD_DIR_PATH}/dist"
def BUILD_LIBS_DIR_PATH = "${BUILD_DIR_PATH}/libs"
def DIST_DIR_NAME = "vanilla-bot-${project.version}"
def DIST_DIR_PATH = "${BUILD_DIST_DIR_PATH}/${DIST_DIR_NAME}"

shadowJar {
    manifest {
        attributes("Manifest-Version": 1.0, "Main-Class": MAIN_CLASS)
        archiveFileName = "${JAR_NAME}.jar"
    }
    exclude("scripts")
}

task createDistDir(type: Delete) {
    dependsOn shadowJar
    doLast {
        delete BUILD_DIST_DIR_PATH
        mkdir DIST_DIR_PATH
    }
}

task copyJarToDist(type: Copy) {
    dependsOn createDistDir
    from "${BUILD_LIBS_DIR_PATH}/${JAR_NAME}.jar" into "${DIST_DIR_PATH}"
}

task copyScriptsToDist(type: Copy) {
    dependsOn copyJarToDist
    from "${projectDir}/scripts" into "${DIST_DIR_PATH}/scripts"
}

task copyLibToDist(type: Copy) {
    dependsOn copyScriptsToDist
    from "${projectDir}/lib" into "${DIST_DIR_PATH}/lib"
}

task copyAssetsToDist(type: Copy) {
    dependsOn copyLibToDist
    from "${projectDir}/assets" into "${DIST_DIR_PATH}/assets"
}

task copyConfigToDist(type: Copy) {
    dependsOn copyAssetsToDist
    from "${projectDir}/config" into "${DIST_DIR_PATH}/config"
    exclude "appsettings.local.yaml"
}

task createRunInputScripts(type: CreateStartScripts) {
    dependsOn copyConfigToDist

    applicationName = "run"
    outputDir = file(DIST_DIR_PATH)
    doLast {
        delete unixScript
        windowsScript.text =
                "@echo off\n" +
                "java" +
                " ${JVM_ARG_AGENT_JAR}" +
                " -cp \"bot.jar;lib/*\"" +
                " ${JVM_ARG_LOG_FILE}" +
                " ${MAIN_CLASS}\n" +
                "@echo on\n" +
                "pause"
    }
}

task publishBot() {
    dependsOn createRunInputScripts
    doLast {
        println "Publishing Vanilla Bot"
    }
}